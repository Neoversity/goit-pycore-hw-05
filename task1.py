# –ó–∞–≤–¥–∞–Ω–Ω—è 1

# –ó–∞–º–∏–∫–∞–Ω–Ω—è –≤ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—ñ - —Ü–µ —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –∑–±–µ—Ä—ñ–≥–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–º—ñ–Ω–Ω—ñ –∑—ñ —Å–≤–æ–≥–æ –ª–µ–∫—Å–∏—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É, 
# —Ç–æ–±—Ç–æ –∑ –æ–±–ª–∞—Å—Ç—ñ, –¥–µ –≤–æ–Ω–∞ –±—É–ª–∞ –æ–≥–æ–ª–æ—à–µ–Ω–∞.
# –†–µ–∞–ª—ñ–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é caching_fibonacci, —è–∫–∞ —Å—Ç–≤–æ—Ä—é—î —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –∫–µ—à –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —ñ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ 
# –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤–∂–µ –æ–±—á–∏—Å–ª–µ–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å —á–∏—Å–µ–ª –§—ñ–±–æ–Ω–∞—á—á—ñ.

# –†—è–¥ –§—ñ–±–æ–Ω–∞—á—á—ñ - —Ü–µ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å —á–∏—Å–µ–ª –≤–∏–¥—É: 0, 1, 1, 2, 3, 5, 8, ..., 
# –¥–µ –∫–æ–∂–Ω–µ –Ω–∞—Å—Ç—É–ø–Ω–µ —á–∏—Å–ª–æ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ –≤–∏—Ö–æ–¥–∏—Ç—å –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º –¥–≤–æ—Ö –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö —á–ª–µ–Ω—ñ–≤ —Ä—è–¥—É.

# –£ –∑–∞–≥–∞–ª—å–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è n-–≥–æ —á–ª–µ–Ω–∞ —Ä—è–¥—É –§—ñ–±–æ–Ω–∞—á—á—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∏—Ä–∞–∑: 
# ùêπùëõ=ùêπùëõ‚àí1+ùêπùëõ‚àí2.

# –¶–µ –∑–∞–≤–¥–∞–Ω–Ω—è –º–æ–∂–Ω–∞ –≤–∏—Ä—ñ—à–∏—Ç–∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ, –≤–∏–∫–ª–∏–∫–∞—é—á–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —â–æ –æ–±—á–∏—Å–ª—é—î —á–∏—Å–ª–∞ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ –¥–æ—Ç–∏, 
# –¥–æ–∫–∏ –≤–∏–∫–ª–∏–∫ –Ω–µ —Å—è–≥–Ω–µ —á–ª–µ–Ω—ñ–≤ —Ä—è–¥—É –º–µ–Ω—à–µ n = 1, –¥–µ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å –∑–∞–¥–∞–Ω–∞.

# –í–∏–º–æ–≥–∏ –¥–æ –∑–∞–≤–¥–∞–Ω–Ω—è:

# –§—É–Ω–∫—Ü—ñ—è caching_fibonacci() –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –≤–Ω—É—Ç—Ä—ñ—à–Ω—é —Ñ—É–Ω–∫—Ü—ñ—é fibonacci(n).
# fibonacci(n) –æ–±—á–∏—Å–ª—é—î n-—Ç–µ —á–∏—Å–ª–æ –§—ñ–±–æ–Ω–∞—á—á—ñ. –Ø–∫—â–æ —á–∏—Å–ª–æ –≤–∂–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É –∫–µ—à—ñ,
# —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –∫–µ—à—É.
# –Ø–∫—â–æ —á–∏—Å–ª–æ –Ω–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É –∫–µ—à—ñ, —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –æ–±—á–∏—Å–ª–∏—Ç–∏ –π–æ–≥–æ,
# –∑–±–µ—Ä–µ–≥—Ç–∏ —É –∫–µ—à —Ç–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ä–µ–∫—É—Ä—Å—ñ—ó –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —á–∏—Å–µ–ª –§—ñ–±–æ–Ω–∞—á—á—ñ.


def caching_fibonacci():
    cache = {} # –∫—î—à

    def fibonacci(n):
        if n in cache:
            return cache[n]
        if n == 0 or n == 1:
            value = n
        else:
            value = fibonacci(n - 1) + fibonacci(n - 2)
        cache[n] = value
        return value
    
    return fibonacci



# *********************************************************************
# –û—Ç—Ä–∏–º—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é fibonacci
# fib = caching_fibonacci()

# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é fibonacci –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —á–∏—Å–µ–ª –§—ñ–±–æ–Ω–∞—á—á—ñ
# print(fib(10))  # –í–∏–≤–µ–¥–µ 55
# print(fib(15))  # –í–∏–≤–µ–¥–µ 610
# *********************************************************************

